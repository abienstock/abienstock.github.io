[{"authors":["admin"],"categories":null,"content":"I am a fifth year PhD student advised by Professor Yevgeniy Dodis and Professor Marshall Ball in the Cryptography Lab at NYU. I received my B.S. in Computer Science from Columbia University in May 2019, where I worked with Professor Allison Bishop. I am fortunate enough to be supported by an NSF Graduate Research Fellowship and a Google PhD Fellowship.\nI am interested in applied cryptography, particularly secure Multi-Party Computation (MPC). My current research focuses on making MPC more practical, both for specific functionalities like Private Set Intersection, as well as for general computation. I have also studied Secure (Group) Messaging and Private Outsourced Storage protocols in the past.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://cs.nyu.edu/~afb383/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/~afb383/author/","section":"authors","summary":"I am a fifth year PhD student advised by Professor Yevgeniy Dodis and Professor Marshall Ball in the Cryptography Lab at NYU. I received my B.S. in Computer Science from Columbia University in May 2019, where I worked with Professor Allison Bishop.","tags":null,"title":"","type":"authors"},{"authors":["Alexander Bienstock","Kevin Yeo"],"categories":[],"content":"","date":1706814074,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1706814074,"objectID":"f75aa89f35047737e8ed79fa80a4bf56","permalink":"https://cs.nyu.edu/~afb383/publication/const-dm/","publishdate":"2024-02-01T15:01:14-04:00","relpermalink":"/~afb383/publication/const-dm/","section":"publication","summary":"","tags":[],"title":"Two Levels are Better than One: Dishonest Majority MPC with ~O(|C|) Total Communication","type":"publication"},{"authors":["Amit Agarwal","Alexander Bienstock","Ivan Damgård","Daniel Escudero"],"categories":[],"content":"","date":1691953274,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691953274,"objectID":"eac9cdd054c43646a3322ed986cc3223","permalink":"https://cs.nyu.edu/~afb383/publication/hm-god-mpc/","publishdate":"2023-08-13T15:01:14-04:00","relpermalink":"/~afb383/publication/hm-god-mpc/","section":"publication","summary":"","tags":[],"title":"Honest Majority GOD MPC with O(depth(C)) Rounds and O(n|C|) Online Communication","type":"publication"},{"authors":["Alexander Bienstock","Daniel Escudero","Antigoni Polychroniadou"],"categories":[],"content":"","date":1691953254,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691953254,"objectID":"83cba64254a87d5360981040817dd8e8","permalink":"https://cs.nyu.edu/~afb383/publication/perfectfluid/","publishdate":"2023-08-13T15:00:54-04:00","relpermalink":"/~afb383/publication/perfectfluid/","section":"publication","summary":"","tags":[],"title":"Perfectly Secure Fluid MPC with Abort and Linear Communication Complexity","type":"publication"},{"authors":["Alexander Bienstock","Sarvar Patel","Joon Young Seo","Kevin Yeo"],"categories":[],"content":"","date":1691953200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691953200,"objectID":"deb407bb8a8605d387a38b57e43e1fc3","permalink":"https://cs.nyu.edu/~afb383/publication/obliv-compression/","publishdate":"2023-08-13T15:00:00-04:00","relpermalink":"/~afb383/publication/obliv-compression/","section":"publication","summary":"","tags":[],"title":"Batch PIR and Labeled PSI with Oblivious Ciphertext Compression","type":"publication"},{"authors":["Marshall Ball","Alexander Bienstock","Lisa Kohl","Pierre Meyer"],"categories":[],"content":"","date":1687719600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1687719600,"objectID":"73fd88225139355ca977fdd90e69f4d4","permalink":"https://cs.nyu.edu/~afb383/publication/thc-ot/","publishdate":"2022-03-17T15:00:00-04:00","relpermalink":"/~afb383/publication/thc-ot/","section":"publication","summary":"","tags":[],"title":"Towards Topology-Hiding Computation from Oblivious Transfer","type":"publication"},{"authors":["Alexander Bienstock","Sarvar Patel","Joon Young Seo","Kevin Yeo"],"categories":[],"content":"","date":1685631864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1685631864,"objectID":"5fbe4ca25baa16e4d6af17300067010a","permalink":"https://cs.nyu.edu/~afb383/publication/okvs/","publishdate":"2023-06-01T11:04:24-04:00","relpermalink":"/~afb383/publication/okvs/","section":"publication","summary":"","tags":[],"title":"Near-Optimal Oblivious Key-Value Stores for Efficient PSI, PSU and Volume-Hiding Multi-Maps","type":"publication"},{"authors":["Alexander Bienstock","Daniel Escudero","Antigoni Polychroniadou"],"categories":[],"content":"","date":1684936791,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1684936791,"objectID":"9a94e1d917c11dba23d9dca58db7edd6","permalink":"https://cs.nyu.edu/~afb383/publication/linearfluid/","publishdate":"2023-05-24T09:59:51-04:00","relpermalink":"/~afb383/publication/linearfluid/","section":"publication","summary":"","tags":[],"title":"On Linear Communication Complexity for (Maximally) Fluid MPC","type":"publication"},{"authors":["Alexander Bienstock","Paul Rösler","Yi Tang"],"categories":[],"content":"","date":1679069694,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679069694,"objectID":"4d2785b771fa699818ea1fb16cdf68aa","permalink":"https://cs.nyu.edu/~afb383/publication/meshmsg/","publishdate":"2023-03-17T12:14:54-04:00","relpermalink":"/~afb383/publication/meshmsg/","section":"publication","summary":"","tags":[],"title":"ASMesh: Secure Messaging in Mesh Networks Using Stronger, Anonymous Double Ratchet","type":"publication"},{"authors":["Alexander Bienstock","Yevgeniy Dodis","Sanjam Garg","Garrison Grogan","Mohammad Hajiabadi","Paul Rösler"],"categories":[],"content":"","date":1633104910,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633104910,"objectID":"a72876fe57f03ca98be93a7e8669896a","permalink":"https://cs.nyu.edu/~afb383/publication/cgka_dynamic_lb/","publishdate":"2021-10-01T12:15:10-04:00","relpermalink":"/~afb383/publication/cgka_dynamic_lb/","section":"publication","summary":"","tags":[],"title":"On the Worst-Case Inefficiency of CGKA","type":"publication"},{"authors":["Alexander Bienstock","Jaiden Fairoze","Sanjam Garg","Pratyay Mukherjee","Srinivasan Raghuraman"],"categories":[],"content":"","date":1633104894,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633104894,"objectID":"e41aae77a7bc3ae63948394d564835bd","permalink":"https://cs.nyu.edu/~afb383/publication/uc_signal/","publishdate":"2021-10-01T12:14:54-04:00","relpermalink":"/~afb383/publication/uc_signal/","section":"publication","summary":"","tags":[],"title":"A More Complete Analysis of the Signal Double Ratchet Algorithm","type":"publication"},{"authors":[],"categories":null,"content":"","date":1630454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630454400,"objectID":"0a5a65fe251be9fb22fa1469a2175345","permalink":"https://cs.nyu.edu/~afb383/talk/fund-algs/","publishdate":"2020-06-02T11:18:48-04:00","relpermalink":"/~afb383/talk/fund-algs/","section":"talk","summary":"Recitation Leader. Taught by [Professor Yevgeniy Dodis](https://cs.nyu.edu/~dodis/).","tags":[],"title":"Fundamental Algorithms","type":"talk"},{"authors":[],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"44b8171f197f16fee6be1ae642dd9a4d","permalink":"https://cs.nyu.edu/~afb383/talk/basic-algs/","publishdate":"2020-06-02T11:18:48-04:00","relpermalink":"/~afb383/talk/basic-algs/","section":"talk","summary":"Recitation Leader and Course Assistant. Taught by [Professor Victor Shoup](https://www.shoup.net/).","tags":[],"title":"Basic Algorithms","type":"talk"},{"authors":["Alexander Bienstock","Yevgeniy Dodis","Yi Tang"],"categories":[],"content":"","date":1607011230,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607011230,"objectID":"f0dcafc52a715c1669534ca211850403","permalink":"https://cs.nyu.edu/~afb383/publication/mka/","publishdate":"2020-12-03T11:00:30-05:00","relpermalink":"/~afb383/publication/mka/","section":"publication","summary":"Secure Group Messaging (SGM) protocols allow groups of users to asynchronously and securely communicate with each other. They have received significant attention recently, including in an effort by the IETF Messaging Layer Security (MLS) working group to standardize an eponymous protocol. In SGM protocols, users share group secrets across time to enable communications and are allowed to asynchronously perform group additions and removals. Moreover, they provide robust security guarantees regarding user state exposures: forward secrecy (FS) and post-compromise security (PCS). The former ensures that group secrets prior to state compromise remain secure, while the latter ensures that the users can recover from state compromise using normal protocol operations. However, the group key agreement primitive at the core of SGM protocols, Continuous Group Key Agreement (CGKA), which is achieved by the TreeKEM protocol in MLS, suffers from bad worst case efficiency and requires strong assumptions, due to asynchronous user operations.\n\n We propose that in the common case of a group membership change policy which allows a single administrator to perform all group additions and removals, classical Multicast Key Agreement (MKA) may serve as a more efficient substitute for CGKA in SGM. In MKA protocols, an omniscient group manager performs all group operations, which increases efficiency and reduces assumptions. However, existing MKA schemes in the literature do not provide formal security analyses nor efficiency analyses regarding dynamically changing groups, and also lack FS and PCS.\n\n We first present rigorous security definitions for MKA which provide increasing levels of security in the case of state exposure of both users and the group manager. We then construct an efficient and formally secure MKA protocol with dynamic groups. Finally, we provide a toy implementation of our protocol, and run experiments which show that the left-balanced binary tree structure used in TreeKEM can be substituted with red-black trees in MKA for better efficiency.","tags":[],"title":"Multicast Key Agreement, Revisited","type":"publication"},{"authors":["Alexander Bienstock","Yevgeniy Dodis","Kevin Yeo"],"categories":[],"content":"","date":1602512649,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602512649,"objectID":"ff4d5356a3459b76fb23c1ad7f546c7c","permalink":"https://cs.nyu.edu/~afb383/publication/fs-eram/","publishdate":"2020-10-12T10:24:09-04:00","relpermalink":"/~afb383/publication/fs-eram/","section":"publication","summary":"In this paper, we study forward secret encrypted RAMs (FS eRAMs) which enable clients to outsource the storage of an n-entry array to a server. In the case of a catastrophic attack where both client and server storage are compromised, FS eRAMs guarantee that the adversary may not recover any array entries that were deleted or overwritten prior to the attack. A simple folklore FS eRAM construction with O(logn) overhead has been known for at least two decades. Unfortunately, no progress has been made since then. We show the lack of progress is fundamental by presenting an Ω(log n) lower bound for FS eRAMs proving that the folklore solution is optimal. To do this, we introduce the symbolic model for proving cryptographic data structures lower bounds that may be of independent interest.\n\n Given this limitation, we investigate applications where forward secrecy may be obtained without incurring an additional O(log n) overhead. We show this is possible for both oblivious RAMs and multicast encryption by incorporating the ideas of the folklore FS eRAM solution into carefully chosen constructions of the corresponding primitives. ","tags":[],"title":"Forward Secret Encrypted RAM: Lower Bounds and Applications","type":"publication"},{"authors":["Alexander Bienstock","Yevgeniy Dodis","Paul Rösler"],"categories":[],"content":"","date":1590451200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590451200,"objectID":"41f984f775f7f1fe52b053fddc831682","permalink":"https://cs.nyu.edu/~afb383/publication/grlb/","publishdate":"2020-06-01T18:16:11-04:00","relpermalink":"/~afb383/publication/grlb/","section":"publication","summary":"Post-Compromise Security, or PCS, refers to the ability of a given protocol to recover—by means of normal protocol operations—from the exposure of local states of its (otherwise honest) participants. While PCS in the two-party setting has attracted a lot of attention recently, the problem of achieving PCS in the group setting—called group ratcheting here—is much less understood. On the one hand, one can achieve excellent security by simply executing, in parallel, a two-party ratcheting protocol (e.g., Signal) for each pair of members in a group. However, this incurs O(n) communication overhead for every message sent, where n is the group size. On the other hand, several related protocols were recently developed in the context of the IETF Messaging Layer Security (MLS) effort that improve the communication overhead per message to O(log n). However, this reduction of communication overhead involves a great restriction: group members are not allowed to send and recover from exposures concurrently such that reaching PCS is delayed up to n communication time slots (potentially even more).  \n  \n In this work we formally study the trade-off between PCS, concurrency, and communication overhead in the context of group ratcheting. Since our main result is a lower bound, we define the cleanest and most restrictive setting where the tension already occurs: static groups equipped with a synchronous (and authenticated) broadcast channel, where up to t arbitrary parties can concurrently send messages in any given round. Already in this setting, we show in a symbolic execution model that PCS requires Ω(t) communication overhead per message. Our symbolic model permits as building blocks black-box use of (even “dual”) PRFs, (even key-updatable) PKE (which in our symbolic definition is at least as strong as HIBE), and broadcast encryption, covering all tools used in previous constructions, but prohibiting the use of exotic primitives. To complement our result, we also prove an almost matching upper bound of O(t·(1+log(n/t))), which smoothly increases from O(log n) with no concurrency, to O(n) with unbounded concurrency, matching the previously known protocols.","tags":[],"title":"On the Price of Concurrency in Group Ratcheting Protocols","type":"publication"},{"authors":["Alexander Bienstock","Allison Bishop","Eli Goldin","Garrison Grogan","Victor Lecomte"],"categories":[],"content":"","date":1581379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581379200,"objectID":"4647b542b259149260bd8569a4472f15","permalink":"https://cs.nyu.edu/~afb383/publication/dlog2lattices/","publishdate":"2020-06-01T18:16:11-04:00","relpermalink":"/~afb383/publication/dlog2lattices/","section":"publication","summary":"In the fall of 2018, a professor became obsessed with conspiracy theories of deeper connections between discrete-log based cryptography and lattice based cryptography. That obsession metastasized and spread to some of the students in the professor's cryptography course through a cryptanalysis challenge that was set as a class competition. The students and the professor continued travelling further down the rabbit hole, refusing to stop when the semester was over. Refusing to stop even as some of the students graduated, and really refusing to stop even now, but pausing long enough to write up this chronicle of their exploits.","tags":[],"title":"From discrete-log to lattices: maybe the real lessons were our broken schemes along the way?","type":"publication"},{"authors":[],"categories":null,"content":"","date":1548115200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548115200,"objectID":"6e111a677b225942fd6df9e50f80a424","permalink":"https://cs.nyu.edu/~afb383/talk/cstheory/","publishdate":"2020-06-02T11:24:05-04:00","relpermalink":"/~afb383/talk/cstheory/","section":"talk","summary":"Course Assistant. Taught by [Professor Allison Bishop](https://www.thecomputersciencecomedian.com/).","tags":[],"title":"Computer Science Theory","type":"talk"},{"authors":[],"categories":null,"content":"","date":1536019200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536019200,"objectID":"2622710106a9bddfb42962dc42484eee","permalink":"https://cs.nyu.edu/~afb383/talk/malware/","publishdate":"2020-06-02T11:25:12-04:00","relpermalink":"/~afb383/talk/malware/","section":"talk","summary":"Course Assistant. Taught by [Professor Michael Sikorski](https://twitter.com/mikesiko?lang=en).","tags":[],"title":"Malware Analysis \u0026 Reverse Engineering","type":"talk"},{"authors":[],"categories":null,"content":"","date":1473206400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1473206400,"objectID":"775a62f0dfc9007bd420e86ed12c40ec","permalink":"https://cs.nyu.edu/~afb383/talk/cic/","publishdate":"2020-06-02T11:26:05-04:00","relpermalink":"/~afb383/talk/cic/","section":"talk","summary":"Course Assistant. Taught by [Professor Adam Cannon](http://www.cs.columbia.edu/~cannon/homepage/Adam_Heath_Cannon.html).","tags":[],"title":"Computing in Context","type":"talk"}]